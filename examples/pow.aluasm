.ISAE ; ISA Extensions segment
                    ALU
                    ALURE
                    BPDIGEST

.LIBS ; Library reference segment


.MAIN ; Code segment
                    read s16[1], $input         ; AluRE ISA extension opcode to read
                                                ; user/dynamic data with a given $id
                    read r256[1], $difficulty
                    read a16[2], $cycle_limit
                    put  0, a16[1]              ; putting a value into register
loop:                                           ; label for cycle
                    sha2 s16[1], r256[2]        ; taking hash of the data
                    ; extr r256[2], s16[1]        ; saving hash result
                    inc  a16[1]                 ; counting steps
                    gt.u a16[1], a16[2]         ; making sure we do not exceed $cycle_limit
                    jif  exceeded
                    lt.u r256[2], r256[1]       ; checking against difficulty
                    jif  done                   ; target difficulty reached!
                    jmp  loop
done:               succ
exceeded:           fail                        ; failing since we exceeded $cycle_limit

.INPUT
                    $input          "Source data for hash generation"
                    $difficulty     "Target PoW difficulty level"
                    $cycle_limit    "Maximum number of cycles"
